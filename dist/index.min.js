(()=>{var e=Object.defineProperty,t=(t,r,a)=>(((t,r,a)=>{r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[r]=a})(t,"symbol"!=typeof r?r+"":r,a),a),r=class extends Error{code;message;name;statusCode=0;constructor(e="Something went wrong",t){super(),this.message=e,this.code=t,this.name=this.constructor.name}},a={BenchmarkError:r,SetupError:class extends r{statusCode=1;name="SetupError"},TeardownError:class extends r{statusCode=2;name="TeardownError"},RunError:class extends r{statusCode=3;name="RunError"},CompleteError:class extends r{statusCode=4;name="CompleteError"},StartError:class extends r{statusCode=5;name="StartError"},FatalError:class extends r{statusCode=7;name="FatalError"}};function n(e,t,r){let n=new a[r](t);return n.stack=e.stack,n}var s=Object.getPrototypeOf(async function(){}).constructor;var i=class{name;error;cycles=0;samples=0;hz=0;meanTime=0;medianTime=0;standardDeviation=0;maxTime=0;minTime=0;times=[];options;stamp;runTime=0;totalTime=0;constructor(e,t,r={}){this.name=e;let a={...i.defaults,...r};"function"==typeof t?a.fn=t:a={...a,...t},this.options=a,this.stamp=performance.now()}async runCallback(e,t,...r){if(t)try{await t.bind(this)(...r)}catch(r){return n(r,`Benchmark \`${this.name}\` failed to run \`${t.name}\` callback: ${r.message}`,e)}}toJSON(){let{name:e,error:t,cycles:r,hz:a,runTime:n,totalTime:s,samples:i,meanTime:m,medianTime:o,standardDeviation:c,maxTime:l,minTime:h}=this;return{name:e,errorMessage:t?t.message:void 0,cycles:r,samples:i,hz:a,meanTime:m,medianTime:o,standardDeviation:c,maxTime:l,minTime:h,runTime:n,totalTime:s}}compare(e,t="percent"){let{error:r,cycles:a,hz:n,meanTime:s,medianTime:i,standardDeviation:m,maxTime:o,minTime:c,runTime:l}=this;if(r)return-1;if(e.error)return 1;switch(t){case"meanTime":return s-e.meanTime;case"medianTime":return i-e.medianTime;case"standardDeviation":return m-e.standardDeviation;case"maxTime":return o-e.maxTime;case"minTime":return c-e.minTime;case"hz":return n-e.hz;case"runTime":return l-e.runTime;case"cycles":return a-e.cycles;case"percent":return Math.trunc(100/e.hz*n-100);default:throw new Error(`Unknown compare field: ${t}`)}}async runSample(e){let{setup:t,teardown:r}=this.options,a=performance.now();for(;performance.now()-a<1e3;){let a=performance.now();this.cycles++;let s,i=await this.runCallback("SetupError",t);if(i)throw i;try{s=await e()}catch(e){throw n(e,`Benchmark \`${this.name}\` failed to run \`fn\`: ${e.message}`,"RunError")}this.times.push(s),this.runTime+=s;let m=await this.runCallback("TeardownError",r);if(m)throw m;this.totalTime+=performance.now()-a}}async run(){this.stamp=performance.now();let{maxTime:e,minSamples:t,onComplete:r,onStart:a,onError:n,fn:i}=this.options,m=1e3*e,o=function(e){let t=`const __start__ = performance.now();\n\n${e.toString().replace(/\n\s*/g,"").replace(/^(async\s)?\(\)\s?=>\s?\{(.*)\}$/g,"$2").replace(/^(async\s)?\(\)\s?=>\s?\((.*)\)$/g,"$2").replace(/^(async\s)?\(\)\s?=>\s?(.*)$/g,"$2").replace(/^(async\s)?function\s?\w+\(\)\s?\{(.*)\}$/g,"$2").replace(/^(async\s)?fn\s?\(\)\s?\{(.*)\}$/g,"$2").replace(/;$/g,"")};\n  \nreturn performance.now() - __start__;`;return"AsyncFunction"===e.constructor.name?new s(t):new Function(t)}(i);try{let e=await this.runCallback("StartError",a);if(e)throw e;for(;this.samples<t||this.totalTime<m;)this.samples++,await this.runSample(o);this.hz=this.cycles/(this.runTime/1e3),this.meanTime=this.runTime/this.times.length,this.medianTime=this.times.sort((e,t)=>e-t)[Math.floor(this.times.length/2)]||0,this.standardDeviation=Math.sqrt(this.times.map(e=>Math.pow(e-this.meanTime,2)).reduce((e,t)=>e+t,0)/this.times.length),this.maxTime=this.times.reduce((e,t)=>Math.max(e,t),0),this.minTime=this.times.reduce((e,t)=>Math.min(e,t),1/0);let n=await this.runCallback("CompleteError",r);if(n)throw n}catch(e){this.error=e;let t=await this.runCallback("FatalError",n);if(t)throw t}}},m=i;t(m,"version","0.0.0"),t(m,"defaults",{maxTime:5,minSamples:1});var o=m;"undefined"!=typeof module?module.exports=o:self.Benchmark=o})();