//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["../lib/index.ts"],"names":["k","n","d","Error","code","message","name","statusCode","constructor","e","r","super","this","A","BenchmarkError","BeforeEachError","AfterEachError","RunError","AfterError","BeforeError","FatalError","F","o","t","stack","async","l","bind","i","MeanTime","MedianTime","StandardDeviation","MaxTime","MinTime","Hz","RunTime","Cycles","Percent","g","error","cycles","samples","hz","meanTime","medianTime","standardDeviation","maxTime","minTime","times","options","stamp","runTime","totalTime","defaults","fn","toJSON","m","c","h","a","s","u","b","errorMessage","compareWith","Math","trunc","runSample","beforeEach","afterEach","performance","now","push","run","minSamples","after","before","onError","length","sort","floor","sqrt","map","pow","reduce","max","min","p","f","y","benchmarks","passed","add","getSortedBenchmarksBy","slice","getFastest","getSlowest","compareFastestWithSlowest","fastest","slowest","by","T","Suite","__EXPORTS__","CompareBy","default"],"mappings":"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","sourcesContent":["// A benchmarking library that supports async hooks and benchmarks by default.\n// This library comes by the problem of handling async functions in a way that is compatible with benchmarking.\n// The problem is that async hook are not supported by Benchmark.js\n// For example, the following code will not work as expected:\n\n/*\n  new Benchmark('test', async () => {\n    await doSomething();\n  }, {\n    async: true,\n    async before() => {\n      console.log(1);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(2);\n    },\n  })\n*/\n\n// The previous code will log 1 and then run the benchmark and the log 2 could be logged before the benchmark is finished or could't be logged at all.\n// This problem prevent us to create an async before and/or after for a benchmark like an api call that could require it.\n\n// This library solves this problem by providing a way to create a benchmark with all the hooks and benchmark handled as async by default.\n\n// Simple examples\n// const bench = new Benchmark(\"name\", async () => {});\n// const bench = new Benchmark(\"name\", async () => {}, options);\n// const bench = new Benchmark(\"name\", {fn: async () => {}, ...options});\n// await bench.run();\n\n// Full example:\n// const bench = new Benchmark('myBenchmark', {\n//   maxTime: 5, // In seconds\n//   minSamples: 1,\n//   beforeEach: async () => {\n//     await doSomething();\n//   },\n//   afterEach: async () => {\n//     await doSomething();\n//   },\n//   after: async () => {\n//     await doSomething();\n//   },\n//   before: async () => {\n//     await doSomething();\n//   },\n//   onError: async (error) => {\n//     await doSomething();\n//   },\n//   fn: async () => {\n//     await doSomething();\n//   },\n// });\n// await bench.run();\n\n// The `Benchmark` constructor takes an `options` argument.\n// The `options` argument is an object with the following properties:\n// * `maxTime`: The maximum time in seconds that a benchmark can take including hooks.\n// * `minSamples`: The minimum number of samples that must be taken.\n// * `beforeEach`: A function to be run once before each benchmark loop, does not count for run time.\n// * `afterEach`: A function to be run once after each benchmark loop, does not count for run time.\n// * `after`: A function to be run once after the benchmark loop finishes, does not count for run time.\n// * `before`: A function to be run once before the benchmark loop starts, does not count for run time.\n// * `onError`: A function to be run if an error occurs.\n// * `fn`: The function to be run.\n\n// The `Benchmark` instance has the following properties:\n// * `name`: The name of the benchmark.\n// * `error`: The error object if an error occurred.\n// * `cycles`: The number of cycles performed.\n// * `hz`: The number of cycles per second.\n// * `meanTime`: The meanTime time per cycle.\n// * `medianTime`: The medianTime time per cycle.\n// * `standardDeviation`: The standard deviation.\n// * `maxTime`: The maximum time.\n// * `minTime`: The minimum time.\n// * `times`: An array of times for each cycle.\n// * `options`: The options object passed to the constructor.\n// * `stamp`: A timestamp representing when the benchmark was created.\n// * `runTime`: The total time taken to run the benchmark, this does not include beforeEach, afterEach, onStrart and after hooks.\n// * `totalTime`: The total time taken to run the benchmark including beforeEach, afterEach, before and after hooks.\n\n// The `Benchmark` instance has the following methods:\n// * `run`: Run the benchmark.\n// * `toJSON`: Return a JSON representation of the benchmark.\n// * `compareWith`: Compare this benchmark to another.\n\n// The `Benchmark` class has the following static properties:\n// * `version`: A string containing the library version.\n// * `defaults`: An object containing the default options.\n\n// If the `beforeEach` `afterEach` `after` `before` `onError` returns a Promise, the benchmark will wait for the promise to resolve before continuing.\n\n// If the `beforeEach` function throws an error, the benchmark will stop and emit an `BeforeEachError` event.\n// If the `afterEach` function throws an error, the benchmark will stop and emit an `AfterEachError` event.\n// If the `fn` function throws an error, the benchmark will stop and emit an `RunError` event.\n// If the `after` function throws an error, the benchmark will stop and emit an `AfterError` event.\n// If the `before` function throws an error, the benchmark will stop and emit an `BeforeError` event.\n// If the `onError` function throws an error, the benchmark will stop and emit an `FatalError` event.\n\n// This errors will be found in the `error` property of the benchmark instance.\n// When converting to JSON, the `errorMessage` property will be a string containing the error message.\n\nimport { version } from \"../package.json\";\n\ndeclare const performance: any;\n\n//*** Errors ***//\n\n// BenchmarkError: An error occurred during benchmarking.\nabstract class BenchmarkError extends Error {\n  private readonly code?: string;\n  readonly message: string;\n  readonly name: string;\n  statusCode = 0;\n\n  constructor(message = \"Something went wrong\", code?: string) {\n    super();\n    this.message = message;\n    this.code = code;\n    this.name = (this.constructor as unknown as { name: string }).name;\n  }\n}\n\n//  BeforeEachError: The `beforeEach` function threw an error.\nclass BeforeEachError extends BenchmarkError {\n  statusCode = 1;\n  name = \"BeforeEachError\";\n}\n\n//  AfterEachError: The `afterEach` function threw an error.\nclass AfterEachError extends BenchmarkError {\n  statusCode = 2;\n  name = \"AfterEachError\";\n}\n\n//  RunError: The `fn` function threw an error.\nclass RunError extends BenchmarkError {\n  statusCode = 3;\n  name = \"RunError\";\n}\n\n//  AfterError: The `after` function threw an error.\nclass AfterError extends BenchmarkError {\n  statusCode = 4;\n  name = \"AfterError\";\n}\n\n//  BeforeError: The `before` function threw an error.\nclass BeforeError extends BenchmarkError {\n  statusCode = 5;\n  name = \"BeforeError\";\n}\n\n//  FatalError: The `onError` function threw an error.\nclass FatalError extends BenchmarkError {\n  statusCode = 7;\n  name = \"FatalError\";\n}\n\nconst Errors = {\n  BenchmarkError,\n  BeforeEachError,\n  AfterEachError,\n  RunError,\n  AfterError,\n  BeforeError,\n  FatalError\n};\n\ntype ErrorType = \"BeforeEachError\" | \"AfterEachError\" | \"RunError\" | \"AfterError\" | \"BeforeError\" | \"FatalError\";\n\n// BenchmarkFunction a function that can be used as a benchmark.\ntype BenchmarkFunction = () => Promise<void | any> | void | any;\n\n//*** Benchmark Options Type ***//\ntype BenchmarkOptions = {\n  // The maximum time in seconds that a benchmark can take.\n  maxTime: number;\n  // The minimum number of samples that must be taken.\n  minSamples: number;\n  // A function to be run once before each benchmark loop, does not count for run time.\n  beforeEach?: () => Promise<void> | void;\n  // A function to be run once after each benchmark loop, does not count for run time.\n  afterEach?: () => Promise<void> | void;\n  // A function to be run once after the benchmark completes, does not count for run time.\n  after?: () => Promise<void> | void;\n  // A function to be run once before the benchmark starts, does not count for run time.\n  before?: () => Promise<void> | void;\n  // A function to be run if an error occurs.\n  onError?: (error: BenchmarkError) => Promise<void> | void;\n  // The function to be run.\n  fn: BenchmarkFunction;\n};\n\ninterface JsonBenchmark {\n  name: string;\n  errorMessage?: string;\n  cycles: number;\n  hz: number;\n  meanTime: number;\n  medianTime: number;\n  standardDeviation: number;\n  maxTime: number;\n  minTime: number;\n  runTime: number;\n  totalTime: number;\n  samples: number;\n}\n\nexport const enum CompareBy {\n  MeanTime = \"meanTime\",\n  MedianTime = \"medianTime\",\n  StandardDeviation = \"standardDeviation\",\n  MaxTime = \"maxTime\",\n  MinTime = \"minTime\",\n  Hz = \"hz\",\n  RunTime = \"runTime\",\n  Cycles = \"cycles\",\n  Percent = \"percent\"\n}\n\ntype BenchmarkConstructor = (\n  name: string,\n  optionsOrFn: (Partial<BenchmarkOptions> & { fn: BenchmarkFunction }) | BenchmarkFunction,\n  options: Partial<BenchmarkOptions>\n) => Benchmark;\n\ninterface Benchmark {\n  Suite: typeof Suite;\n  readonly version: string;\n  readonly defaults: {\n    maxTime: number;\n    minSamples: number;\n  };\n  name: string;\n  error?: BenchmarkError;\n  cycles: number;\n  samples: number;\n  hz: number;\n  meanTime: number;\n  medianTime: number;\n  standardDeviation: number;\n  maxTime: number;\n  minTime: number;\n  times: number[];\n  options: BenchmarkOptions;\n  stamp: number;\n  runTime: number;\n  totalTime: number;\n  constructor: BenchmarkConstructor;\n  run(): Promise<void>;\n  toJSON(): JsonBenchmark;\n  compareWith(other: Benchmark, compareBy: CompareBy): number;\n}\n\n// helper to get the correct error type from a normal error\nfunction getError(error: Error, message: string, type: ErrorType): BenchmarkError {\n  let benchmarkError = new Errors[type](message);\n  benchmarkError.stack = error.stack;\n  return benchmarkError;\n}\n\n// helper function to know if a function is async or not\nfunction isAsync(fn: BenchmarkFunction): boolean {\n  return fn.constructor.name === \"AsyncFunction\";\n}\n\nasync function runCallback(\n  instance: any,\n  errorTypeIfAny: ErrorType,\n  callback?: (...args: any[]) => Promise<void> | void,\n  ...args: any[]\n): Promise<void | BenchmarkError> {\n  if (callback) {\n    try {\n      await callback.bind(instance)(...args);\n    } catch (error) {\n      return getError(error, `Benchmark \\`${instance.name}\\` failed to run \\`${callback.name}\\` callback: ${error.message}`, errorTypeIfAny);\n    }\n  }\n}\n\n// The benchmark class\nclass Benchmark implements Benchmark {\n  static Suite: typeof Suite;\n  static readonly version: string = version;\n  static readonly defaults: {\n    maxTime: number;\n    minSamples: number;\n  } = {\n    maxTime: 5,\n    minSamples: 1\n  };\n\n  name: string;\n  error?: BenchmarkError;\n  cycles: number = 0;\n  samples: number = 0;\n  hz: number = 0;\n  meanTime: number = 0;\n  medianTime: number = 0;\n  standardDeviation: number = 0;\n  maxTime: number = 0;\n  minTime: number = 0;\n  times: number[] = [];\n  options: BenchmarkOptions;\n  stamp!: number;\n  runTime: number = 0;\n  totalTime: number = 0;\n\n  constructor(name: string, optionsOrFn: (Partial<BenchmarkOptions> & { fn: BenchmarkFunction }) | BenchmarkFunction, options: Partial<BenchmarkOptions> = {}) {\n    this.name = name;\n    let opts = {\n      ...Benchmark.defaults,\n      ...options\n    } as BenchmarkOptions;\n\n    if (typeof optionsOrFn === \"function\") {\n      opts.fn = optionsOrFn;\n    } else {\n      opts = {\n        ...opts,\n        ...optionsOrFn\n      };\n    }\n\n    this.options = opts;\n  }\n\n  toJSON(): JsonBenchmark {\n    const { name, error, cycles, hz, runTime, totalTime, samples, meanTime, medianTime, standardDeviation, maxTime, minTime } = this;\n\n    return {\n      name,\n      errorMessage: error ? error.message : undefined,\n      cycles,\n      samples,\n      hz,\n      meanTime,\n      medianTime,\n      standardDeviation,\n      maxTime,\n      minTime,\n      runTime,\n      totalTime\n    };\n  }\n\n  compareWith(other: Benchmark, compareBy: CompareBy = CompareBy.Percent): number {\n    const { error, cycles, hz, meanTime, medianTime, standardDeviation, maxTime, minTime, runTime } = this;\n\n    if (error) {\n      return -1;\n    }\n\n    if (other.error) {\n      return 1;\n    }\n\n    switch (compareBy) {\n      case \"meanTime\":\n        return meanTime - other.meanTime;\n      case \"medianTime\":\n        return medianTime - other.medianTime;\n      case \"standardDeviation\":\n        return standardDeviation - other.standardDeviation;\n      case \"maxTime\":\n        return maxTime - other.maxTime;\n      case \"minTime\":\n        return minTime - other.minTime;\n      case \"hz\":\n        return hz - other.hz;\n      case \"runTime\":\n        return runTime - other.runTime;\n      case \"cycles\":\n        return cycles - other.cycles;\n      case \"percent\":\n        return Math.trunc((100 / other.hz) * hz - 100);\n      default:\n        throw new Error(`Unknown compare field: ${compareBy}`);\n    }\n  }\n\n  async runSample() {\n    const { beforeEach, afterEach, fn } = this.options;\n    let sampleMaxTime = 1000;\n    let startTime = performance.now();\n\n    while (performance.now() - startTime < sampleMaxTime) {\n      const startCycleTime = performance.now();\n      this.cycles++;\n      const BeforeEachError = await runCallback(this, \"BeforeEachError\", beforeEach);\n      if (BeforeEachError) {\n        throw BeforeEachError;\n      }\n\n      let time;\n      try {\n        if (isAsync(fn)) {\n          let start = performance.now();\n          await fn();\n          time = performance.now() - start;\n        } else {\n          let start = performance.now();\n          fn();\n          time = performance.now() - start;\n        }\n      } catch (error) {\n        throw getError(error, `Benchmark \\`${this.name}\\` failed to run \\`fn\\`: ${error.message}`, \"RunError\");\n      }\n\n      this.times.push(time);\n      this.runTime += time;\n\n      const AfterEachError = await runCallback(this, \"AfterEachError\", afterEach);\n      if (AfterEachError) {\n        throw AfterEachError;\n      }\n\n      this.totalTime += performance.now() - startCycleTime;\n    }\n  }\n\n  // Run the benchmark.\n  async run(): Promise<void> {\n    this.stamp = performance.now();\n    const { maxTime, minSamples, after, before, onError, fn } = this.options;\n    let maxTimeInMilliseconds = maxTime * 1000;\n\n    try {\n      const beforeError = await runCallback(this, \"BeforeError\", before);\n      if (beforeError) {\n        throw beforeError;\n      }\n\n      while (this.samples < minSamples || this.totalTime < maxTimeInMilliseconds) {\n        this.samples++;\n        await this.runSample();\n      }\n\n      // Calculate the hz by second\n      this.hz = this.cycles / (this.runTime / 1000);\n\n      // Calculate the mean, median, margin of error, and standard deviation.\n      this.meanTime = this.runTime / this.times.length;\n      this.medianTime = this.times.sort((a, b) => a - b)[Math.floor(this.times.length / 2)] || 0;\n      this.standardDeviation = Math.sqrt(this.times.map((t) => Math.pow(t - this.meanTime, 2)).reduce((a, b) => a + b, 0) / this.times.length);\n\n      // Calculate the max, min, and average times.\n      this.maxTime = this.times.reduce((max, time) => Math.max(max, time), 0);\n      this.minTime = this.times.reduce((min, time) => Math.min(min, time), Infinity);\n\n      const afterError = await runCallback(this, \"AfterError\", after);\n      if (afterError) {\n        throw afterError;\n      }\n    } catch (error) {\n      this.error = error;\n\n      const onErrorError = await runCallback(this, \"FatalError\", onError, error);\n      if (onErrorError) {\n        throw onErrorError;\n      }\n    }\n  }\n}\n\n//*** Class Suite ***//\ntype SuiteOptions = {\n  // The maximum time in seconds that a benchmark can take.\n  maxTime: number;\n  // The minimum number of samples that must be taken.\n  minSamples: number;\n  // A function to be run once before each benchmark run\n  beforeEach?: (benchmark: Benchmark, i: number) => Promise<void> | void;\n  // A function to be run once after each benchmark run\n  afterEach?: (benchmark: Benchmark, i: number) => Promise<void> | void;\n  // A function to be run once after the suite completes\n  after?: () => Promise<void> | void;\n  // A function to be run once before the suite starts\n  before?: () => Promise<void> | void;\n  // A function to be run if an error occurs.\n  onError?: (error: BenchmarkError) => Promise<void> | void;\n};\n\ninterface JsonSuite {\n  name: string;\n  errorMessage?: string;\n  runTime: number;\n  totalTime: number;\n  passed: boolean;\n  benchmarks: JsonBenchmark[];\n}\n\ntype SuiteConstructor = (name: string, options?: Partial<SuiteOptions>) => Suite;\n\ninterface Suite {\n  readonly defaults: {\n    maxTime: number;\n    minSamples: number;\n  };\n\n  name: string;\n  error?: BenchmarkError;\n  options: SuiteOptions;\n  stamp: number;\n  runTime: number;\n  totalTime: number;\n  benchmarks: Benchmark[];\n\n  constructor: SuiteConstructor;\n  add(name: string, optionsOrFn: (Partial<BenchmarkOptions> & { fn: BenchmarkFunction }) | BenchmarkFunction, options: Partial<BenchmarkOptions>): Benchmark;\n  toJSON(): JsonSuite;\n  run(): Promise<void>;\n\n  getSortedBenchmarks(sortedBy: CompareBy): Benchmark[];\n  getFastest(sortedBy: CompareBy): Benchmark;\n  getSlowest(sortedBy: CompareBy): Benchmark;\n  compareFastestWithSlowest(compareBy: CompareBy): { fastest: Benchmark; slowest: Benchmark; by: number };\n}\n\nclass Suite implements Suite {\n  static readonly defaults = {\n    maxTime: 5,\n    minSamples: 1\n  };\n\n  name: string;\n  error?: BenchmarkError;\n  options: SuiteOptions;\n  stamp!: number;\n  runTime: number = 0;\n  totalTime: number = 0;\n  benchmarks: Benchmark[] = [];\n\n  constructor(name: string, options: Partial<SuiteOptions> = {}) {\n    this.name = name;\n    this.options = {\n      ...Suite.defaults,\n      ...options\n    };\n  }\n\n  toJSON(): JsonSuite {\n    const { error, name, runTime, totalTime } = this;\n\n    return {\n      name,\n      errorMessage: error ? error.message : undefined,\n      runTime,\n      totalTime,\n      passed: !error,\n      benchmarks: this.benchmarks.map((benchmark) => benchmark.toJSON())\n    };\n  }\n\n  add(\n    name: string,\n    optionsOrFn: (Partial<BenchmarkOptions> & { fn: BenchmarkFunction }) | BenchmarkFunction,\n    options: Partial<BenchmarkOptions> = {}\n  ): Benchmark {\n    let opts = {\n      ...{\n        minSamples: this.options.minSamples,\n        maxTime: this.options.maxTime\n      },\n      ...options\n    } as BenchmarkOptions;\n\n    if (typeof optionsOrFn === \"function\") {\n      opts.fn = optionsOrFn;\n    } else {\n      opts = {\n        ...opts,\n        ...optionsOrFn\n      };\n    }\n    let benchmark = new Benchmark(name, opts);\n    this.benchmarks.push(benchmark);\n    return benchmark;\n  }\n\n  async run(): Promise<void> {\n    this.stamp = performance.now();\n    const { beforeEach, afterEach, after, before, onError } = this.options;\n\n    try {\n      const beforeError = await runCallback(this, \"BeforeError\", before);\n      if (beforeError) {\n        throw beforeError;\n      }\n\n      for (let i = 0, l = this.benchmarks.length; i < l; i++) {\n        let benchmark = this.benchmarks[i];\n        const beforeEachError = await runCallback(this, \"BeforeEachError\", beforeEach, benchmark, i);\n        if (beforeEachError) {\n          throw beforeEachError;\n        }\n\n        await benchmark.run();\n        this.runTime += benchmark.runTime;\n        this.totalTime += benchmark.totalTime;\n\n        const afterEachError = await runCallback(this, \"AfterEachError\", afterEach, benchmark, i);\n        if (afterEachError) {\n          throw afterEachError;\n        }\n      }\n\n      const afterError = await runCallback(this, \"AfterError\", after);\n      if (afterError) {\n        throw afterError;\n      }\n    } catch (error) {\n      this.error = error;\n\n      const onErrorError = await runCallback(this, \"FatalError\", onError, error);\n      if (onErrorError) {\n        throw onErrorError;\n      }\n    }\n  }\n\n  getSortedBenchmarksBy(sortBy: CompareBy): Benchmark[] {\n    const benchmarks = this.benchmarks.slice();\n    const sortedBenchmarks = benchmarks.sort((a, b) => {\n      let result = b.compareWith(a, sortBy);\n      return result > 0 ? 1 : result < 0 ? -1 : 0;\n    });\n\n    return sortedBenchmarks;\n  }\n\n  getFastest(sortBy: CompareBy): Benchmark {\n    const sortedBenchmarks = this.getSortedBenchmarksBy(sortBy);\n    return sortedBenchmarks[0];\n  }\n\n  getSlowest(sortBy: CompareBy): Benchmark {\n    const sortedBenchmarks = this.getSortedBenchmarksBy(sortBy);\n    return sortedBenchmarks[sortedBenchmarks.length - 1];\n  }\n\n  compareFastestWithSlowest(compareBy: CompareBy) {\n    const fastest = this.getFastest(compareBy);\n    const slowest = this.getSlowest(compareBy);\n\n    return {\n      fastest,\n      slowest,\n      by: fastest.compareWith(slowest, compareBy)\n    };\n  }\n}\n\nBenchmark.Suite = Suite;\n\n// Export the Benchmark class.\nexport default Benchmark;\n"]}